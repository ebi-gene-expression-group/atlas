package uk.ac.ebi.atlas.experimentpage.qc;

import org.apache.commons.lang3.tuple.Pair;
import uk.ac.ebi.atlas.experimentpage.differential.CanStreamSupplier;
import uk.ac.ebi.atlas.model.download.ExternallyAvailableContent;
import uk.ac.ebi.atlas.model.experiment.differential.DifferentialExperiment;
import uk.ac.ebi.atlas.resource.DataFileHub;

import javax.inject.Inject;
import javax.inject.Named;
import java.io.Writer;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.function.Function;
import java.util.stream.Collectors;

@Named
public class RnaSeqQcReport extends CanStreamSupplier<DifferentialExperiment> {
    @Override
    public ExternallyAvailableContent.ContentType contentType() {
        return ExternallyAvailableContent.ContentType.SUPPLEMENTARY_INFORMATION;
    }

    private final DataFileHub dataFileHub;

    @Inject
    public RnaSeqQcReport(DataFileHub dataFileHub) {
        this.dataFileHub = dataFileHub;
    }

    @Override
    public Collection<ExternallyAvailableContent> get(DifferentialExperiment experiment) {

        List<Pair<String, Function<Writer, Void>>> documents =
                new RnaSeqQcFiles(
                        dataFileHub.getExperimentFiles(experiment.getAccession()).qcFolder).get().entrySet().stream()
                        .map(stringAtlasResourceEntry ->
                                Pair.of(stringAtlasResourceEntry.getKey(),
                                        readFromResourceAndWriteTsv(
                                                stringAtlasResourceEntry.getValue(),
                                                Function.identity())))
                        .collect(Collectors.toList());

        if (!documents.isEmpty()) {
            return Collections.singleton(
                    new ExternallyAvailableContent(
                            makeUri("qc"),
                            ExternallyAvailableContent.Description.create(
                                    "link", "Quality check report (generated by iRAP)"),
                            documents.size() == 1 ?
                                    streamFile(documents.get(0)) :
                                    streamFolder(experiment.getAccession() + "-qc", documents)));
        } else {
            return Collections.emptySet();
        }
    }
}

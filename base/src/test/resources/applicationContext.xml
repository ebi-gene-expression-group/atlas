<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd
           http://www.springframework.org/schema/util
           http://www.springframework.org/schema/util/spring-util-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- PostgreSQL configurtion -->
    <!-- If jdbc.properties isnâ€™t found, inject variables from the profile -->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-resource-not-found="true"/>

    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="poolName" value="gxaHikari" />
        <property name="connectionTestQuery" value="SELECT 1" />
        <property name="dataSourceClassName" value="org.postgresql.ds.PGSimpleDataSource" />
        <!--<property name="maximumPoolSize" value="10" />-->
        <!--<property name="idleTimeout" value="600000" />-->

        <property name="dataSourceProperties">
            <props>
                <prop key="url">${jdbc.url}</prop>
                <prop key="user">${jdbc.username}</prop>
                <prop key="password">${jdbc.password}</prop>
            </props>
        </property>
    </bean>

    <!-- HikariCP configuration -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig" />
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>

    <!-- Enables @Transactional -->
    <tx:annotation-driven/>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- End of PostgreSQL configurtion -->

    <!-- Solr configuration -->
    <bean id="solrClientBioentities" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg value="http://${solr.host}:8983/solr/bioentities"/>
    </bean>

    <bean id="solrClientAnalytics" class="org.apache.solr.client.solrj.impl.HttpSolrClient">
        <constructor-arg value="http://${solr.host}:8983/solr/analytics"/>
    </bean>

    <bean id="solrAnalyticsServerURL" class="java.lang.String">
        <constructor-arg value="http://${solr.host}:8983/solr/analytics/"/>
    </bean>

    <bean id="zkHost" class="java.lang.String">
        <constructor-arg value="${zk.host}:2181"/>
    </bean>
    <!-- End of Solr configuration -->

    <!-- Legacy Solr stuff -->
    <bean id="embeddedSolrServerFactory" class="uk.ac.ebi.atlas.solr.EmbeddedSolrServerFactory"/>

    <bean id="embeddedBioentitiesSolrServer"
          factory-bean="embeddedSolrServerFactory" factory-method="createEmbeddedSolrServerInstance">
        <constructor-arg type="java.lang.String" value="bioentities"/>
    </bean>
    <!-- End of legacy Solr -->

    <context:component-scan base-package="uk.ac.ebi.atlas"/>

    <util:properties id="configuration" location="classpath:configuration.properties"/>

    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate"/>
</beans>
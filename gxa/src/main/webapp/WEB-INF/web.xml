<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
         http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">

    <!-- Configure ContextLoaderListener to use AnnotationConfigWebApplicationContext
         instead of the default XmlWebApplicationContext -->
    <context-param>
        <param-name>contextClass</param-name>
        <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
    </context-param>

    <!-- We donâ€™t need to specify the @Configuration classes if we annotate WebConfig below with @ComponentScan,
         since that will detect all config classes and use them to build the application context -->
    <!-- Configuration locations must consist of one or more comma- or space-delimited
           fully-qualified @Configuration classes. Fully-qualified packages may also be
           specified for component-scanning -->
    <!--<context-param>-->
        <!--<param-name>contextConfigLocation</param-name>-->
        <!--<param-value>uk.ac.ebi.atlas.configuration.AppConfig,uk.ac.ebi.atlas.configuration.BasePathsConfig,uk.ac.ebi.atlas.configuration.PathsConfig,uk.ac.ebi.atlas.configuration.JdbcConfig,uk.ac.ebi.atlas.configuration.SolrConfig</param-value>-->
    <!--</context-param>-->

    <!-- Declare a Spring MVC DispatcherServlet as usual -->
    <servlet>
        <servlet-name>dispatcher</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- Configure DispatcherServlet to use AnnotationConfigWebApplicationContext
             instead of the default XmlWebApplicationContext -->
        <init-param>
            <param-name>contextClass</param-name>
            <param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
        </init-param>
        <!-- Again, config locations must consist of one or more comma- or space-delimited
             and fully-qualified @Configuration classes -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>uk.ac.ebi.atlas.configuration.WebConfig</param-value>
        </init-param>
        <!-- Uncomment if you want a slower start-up time but a faster first-page load -->
        <!--<load-on-startup>1</load-on-startup>-->
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcher</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <filter>
        <filter-name>UrlRewriteFilter</filter-name>
        <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
        <init-param>
            <param-name>confPath</param-name>
            <param-value>/WEB-INF/urlrewrite.xml</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>UrlRewriteFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
    </filter-mapping>

    <filter>
        <filter-name>encoding-filter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encoding-filter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>cors-headers</filter-name>
        <filter-class>uk.ac.ebi.atlas.filters.CORSHeaders</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>cors-headers</filter-name>
        <url-pattern>/resources/*</url-pattern>
        <url-pattern>/das/*</url-pattern>
        <url-pattern>/rest/*</url-pattern>
        <url-pattern>/json/*</url-pattern>
        <url-pattern>/sc/json/*</url-pattern>
    </filter-mapping>

    <security-role>
        <role-name>admin</role-name>
    </security-role>
    <login-config>
        <auth-method>BASIC</auth-method>
    </login-config>

    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Admin</web-resource-name>
            <url-pattern>/admin/*</url-pattern>
            <http-method>GET</http-method>
            <http-method>POST</http-method>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
    </security-constraint>

    <security-constraint>
        <display-name>restrict direct requests (only forwarded requests will work)</display-name>
        <web-resource-collection>
            <web-resource-name>Restricted folders</web-resource-name>
            <url-pattern>/expdata/*</url-pattern>
        </web-resource-collection>
        <auth-constraint />
    </security-constraint>

    <!-- Disable JSessionID -->
    <session-config>
        <tracking-mode>COOKIE</tracking-mode>
    </session-config>

    <welcome-file-list>
        <welcome-file>/WEB-INF/jsp/index.jsp</welcome-file>
    </welcome-file-list>

    <error-page>
        <location>/WEB-INF/jsp/error.jsp</location>
    </error-page>
</web-app>

{"version":3,"sources":["webpack:///./atlas_bundles/browse-by-species/index.js","webpack:///./atlas_bundles/browse-by-species/src/browseBySpeciesRenderer.jsx","webpack:///./atlas_bundles/browse-by-species/src/BrowseBySpecies.jsx","webpack:///./atlas_bundles/browse-by-species/src/SpeciesItem.jsx","webpack:///./node_modules/react-ebi-species/lib/index.js","webpack:///./node_modules/react-ebi-species/lib/EbiSpeciesIcon.js","webpack:///./node_modules/react-ebi-species/lib/ebi-visual-species.css?b952","webpack:///./node_modules/react-ebi-species/lib/ebi-visual-species.css","webpack:///./node_modules/react-ebi-species/lib/mapping.js"],"names":["render","atlasUrl","speciesInfoList","container","document","getElementById","BrowseBySpecies","speciesItems","props","map","speciesInfo","species","propTypes","PropTypes","string","isRequired","arrayOf","shape","totalExperiments","number","baselineExperiments","differentialExperiments","SpeciesItem","allExperimentsUrl","segment","addSearch","organism","differentialExperimentsUrl","experimentType","baselineExperimentsUrl","speciesFirstCapitalLetter","toUpperCase","substr","cursor","fontWeight"],"mappings":"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;AAL5B,CAAxB;;kBAQeO,W;;;;;;;;;;;;;AC/Cf;;AAEA;AACA;AACA,CAAC;AACD;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;;AAEA;AACA,wB;;;;;;;;;;;;;AC1BA;;AAEA;AACA;AACA,CAAC;;AAED;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA,sCAAsC,uCAAuC,gBAAgB;;AAE7F;AACA;AACA;AACA;AACA;AACA,YAAY,qEAAqE;AACjF,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;;AClDA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gCAAgC,UAAU,EAAE;AAC5C,C;;;;;;;;;;;;ACzBA;AACA;;;AAGA;AACA,0KAA2K,iCAAiC,6GAA6G,qgBAAqgB,0BAA0B,yBAAyB,GAAG,oCAAoC,iCAAiC,qBAAqB,+BAA+B,GAAG,6BAA6B,4BAA4B,2BAA2B;;AAEpkC;;;;;;;;;;;;;;ACPA;;AAEA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;AACA,sC","file":"expressionAtlasBrowseBySpecies.bundle.js","sourcesContent":["import render from './src/browseBySpeciesRenderer.jsx';\n\nexport {render};\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/browse-by-species/index.js","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport BrowseBySpecies from './BrowseBySpecies.jsx';\n\nexport default function ({atlasUrl, speciesInfoList, container}) {\n    ReactDOM.render(\n        <BrowseBySpecies atlasUrl={atlasUrl} speciesInfoList={speciesInfoList} />,\n        typeof container === `string` ? document.getElementById(container) : container)\n};\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/browse-by-species/src/browseBySpeciesRenderer.jsx","import React from 'react';\n\nimport SpeciesItem from './SpeciesItem.jsx';\n\nconst BrowseBySpecies = props =>\n{\n    const speciesItems = props.speciesInfoList.map(speciesInfo =>\n        <SpeciesItem key={speciesInfo.species}\n                     atlasUrl={props.atlasUrl}\n                     {...speciesInfo}\n        />);\n\n    return (\n        <div className=\"row small-up-2 medium-up-3\">\n            {speciesItems}\n        </div>\n    );\n};\n\nBrowseBySpecies.propTypes = {\n    atlasUrl: React.PropTypes.string.isRequired,\n    speciesInfoList: React.PropTypes.arrayOf(React.PropTypes.shape({\n        species: React.PropTypes.string.isRequired,\n        totalExperiments: React.PropTypes.number.isRequired,\n        baselineExperiments: React.PropTypes.number.isRequired,\n        differentialExperiments: React.PropTypes.number.isRequired\n    })).isRequired,\n};\n\nexport default BrowseBySpecies;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/browse-by-species/src/BrowseBySpecies.jsx","import React from 'react';\nimport URI from 'urijs';\nimport EbiSpeciesIcon  from 'react-ebi-species';\n\nconst SpeciesItem = props =>\n{\n    const allExperimentsUrl = URI(props.atlasUrl).segment(`experiments`).addSearch({ organism: props.species });\n    const differentialExperimentsUrl = URI(allExperimentsUrl).addSearch({ experimentType: `differential` });\n    const baselineExperimentsUrl = URI(allExperimentsUrl).addSearch({ experimentType: `baseline` });\n\n    const speciesFirstCapitalLetter = props.species[0].toUpperCase() + props.species.substr(1);\n\n    return (\n        <div className=\"column column-block text-center combo\">\n            <a href={allExperimentsUrl}>\n                <span className=\"large-species-icon\">\n                    <EbiSpeciesIcon species={props.species}/>\n                </span>\n\n                <h5 className=\"species\">{speciesFirstCapitalLetter}</h5>\n            </a>\n\n            <p className=\"experiments\">\n                {props.totalExperiments} experiments<br/>\n                <a href={baselineExperimentsUrl} className=\"baseline\">\n                    <span data-tooltip style={{cursor: `unset`, fontWeight: `bold`}}\n                          className=\"baseline tiny button-rd\" title=\"Baseline experiments\">B</span>\n                    {props.baselineExperiments}\n                </a>\n                <a href={differentialExperimentsUrl} className=\"differential padding-left-medium\">\n                    <span data-tooltip style={{cursor: `unset`, fontWeight: `bold`}}\n                          className=\"differential tiny button-rd\" title=\"Differential experiments\">D</span>\n                    {props.differentialExperiments}\n                </a>\n            </p>\n        </div>\n    );\n};\n\nSpeciesItem.propTypes = {\n    atlasUrl: React.PropTypes.string.isRequired,\n    species: React.PropTypes.string.isRequired,\n    totalExperiments: React.PropTypes.number.isRequired,\n    baselineExperiments: React.PropTypes.number.isRequired,\n    differentialExperiments: React.PropTypes.number.isRequired,\n};\n\nexport default SpeciesItem;\n\n\n\n// WEBPACK FOOTER //\n// ./atlas_bundles/browse-by-species/src/SpeciesItem.jsx","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.render = exports.default = undefined;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _EbiSpeciesIcon = require('./EbiSpeciesIcon.js');\n\nvar _EbiSpeciesIcon2 = _interopRequireDefault(_EbiSpeciesIcon);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar render = function render(options, target) {\n  _reactDom2.default.render(_react2.default.createElement(_EbiSpeciesIcon2.default, options), document.getElementById(target));\n};\n\nexports.default = _EbiSpeciesIcon2.default;\nexports.render = render;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-ebi-species/lib/index.js\n// module id = 259\n// module chunks = 1 3","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nrequire('./ebi-visual-species.css');\n\nvar _mapping = require('./mapping.js');\n\nvar _mapping2 = _interopRequireDefault(_mapping);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar EbiSpeciesIcon = function EbiSpeciesIcon(props) {\n  var groupAndIcon = (0, _mapping2.default)(props.species);\n  return _react2.default.createElement('span', {\n    className: 'react-ebi-species-icon',\n    'data-icon': groupAndIcon[1],\n    style: { color: props.colourOverride || props.groupColours[groupAndIcon[0]] },\n    title: props.species });\n};\n\nEbiSpeciesIcon.propTypes = {\n  species: _propTypes2.default.string.isRequired,\n  colourOverride: _propTypes2.default.string,\n  groupColours: _propTypes2.default.shape({\n    mammals: _propTypes2.default.string.isRequired,\n    plants: _propTypes2.default.string.isRequired,\n    other: _propTypes2.default.string.isRequired\n  }).isRequired\n};\n\nEbiSpeciesIcon.defaultProps = {\n  species: 'oryctolagus cuniculus', //rabbit is objectively the best species\n  groupColours: {\n    mammals: 'red',\n    plants: 'green',\n    other: 'blue'\n  }\n};\n\nexports.default = EbiSpeciesIcon;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-ebi-species/lib/EbiSpeciesIcon.js\n// module id = 260\n// module chunks = 1 3","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../css-loader/index.js!./ebi-visual-species.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../css-loader/index.js!./ebi-visual-species.css\", function() {\n\t\t\tvar newContent = require(\"!!../../css-loader/index.js!./ebi-visual-species.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-ebi-species/lib/ebi-visual-species.css\n// module id = 261\n// module chunks = 1 3","exports = module.exports = require(\"../../css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"/* Taken from: https://github.com/ebiwd/EBI-Icon-fonts */\\n/* https://www.ebi.ac.uk/web_guidelines/EBI-Icon-fonts/v1.2/fonts.css */\\n@font-face {\\n    font-family: 'EBI-Species';\\n    src: url('https://www.ebi.ac.uk/web_guidelines/EBI-Icon-fonts/v1.2/EBI-Species/fonts/EBI-Species.eot');\\n    src: url('https://www.ebi.ac.uk/web_guidelines/EBI-Icon-fonts/v1.2/EBI-Species/fonts/EBI-Species.eot?#iefix') format('embedded-opentype'),\\n    url('https://www.ebi.ac.uk/web_guidelines/EBI-Icon-fonts/v1.2/EBI-Species/fonts/EBI-Species.woff') format('woff'),\\n    url('https://www.ebi.ac.uk/web_guidelines/EBI-Icon-fonts/v1.2/EBI-Species/fonts/EBI-Species.svg#EBI-Species') format('svg'),\\n    url('https://www.ebi.ac.uk/web_guidelines/EBI-Icon-fonts/v1.2/EBI-Species/fonts/EBI-Species.ttf') format('truetype');\\n    font-weight: normal;\\n    font-style: normal;\\n}\\n\\n.react-ebi-species-icon:before {\\n    font-family: 'EBI-Species';\\n    color: inherit;\\n    content: attr(data-icon);\\n}\\n\\n.react-ebi-species-icon {\\n    text-decoration: none;\\n    font-style: normal\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/react-ebi-species/lib/ebi-visual-species.css\n// module id = 262\n// module chunks = 1 3","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar mapping = {\n  mammals: {\n    \"a\": [\"alpaca\", \"vicugna pacos\"],\n    \"A\": [\"cat\", \"felis catus\"],\n    \"C\": [\"cow\", \"bos taurus\"],\n    \"d\": [\"dog\", \"canis lupus\", \"canis lupus familiaris\"],\n    \"D\": [\"dolphin\"],\n    \"e\": [\"elephant\", \"loxodonta africana\", \"loxodonta cyclotis\", \"elephas maximus\"],\n    \"g\": [\"guinea pig\", \"cavia porcellus\"],\n    \"G\": [\"gorilla\", \"gorilla gorilla\"],\n    \"h\": [\"horse\", \"equus caballus\"],\n    \"H\": [\"human\", \"homo sapiens\"],\n    \"i\": [\"chimpanzee\", \"pan paniscus\", \"pan troglodytes\"],\n    \"I\": [\"squirrel\"],\n    \"l\": [\"armadillo\"],\n    \"m\": [\"goat\"],\n    \"M\": [\"mouse\", \"mus musculus\"],\n    \"N\": [\"mouse lemur\"],\n    \"o\": [\"hedgehog\", \"erinaceus europaeus\"],\n    \"p\": [\"pig\", \"sus scrofa\"],\n    \"Q\": [\"shrew\"],\n    \"r\": [\"monkey\", \"macaca mulatta\"],\n    \"R\": [\"rat\", \"rattus norvegicus\"],\n    \"t\": [\"rabbit\", \"oryctolagus cuniculus\"],\n    \"U\": [\"platypus\", \"ornithorhynchus anatinus\"],\n    \"w\": [\"wallaby\"],\n    \"x\": [\"sheep\", \"ovis aries\"],\n    \"3\": [\"kangaroo rat\"],\n    \"8\": [\"papio anubis\"],\n    \"9\": [\"monodelphis domestica\"],\n    \"!\": [\"ferret\", \"mustela putorius furo\"],\n    \"(\": [\"bat\"],\n    \"*\": [\"orangutan\", \"pongo abelii\", \"pongo pygmaeus\"]\n  },\n  plants: {\n    \"B\": [\"arabidopsis thaliana\", \"arabidopsis lyrata\", \"brassica oleracea\", \"brassica rapa\"],\n    \"c\": [\"corn\", \"zea mays\"],\n    \"O\": [\"grapes\", \"vitis vinifera\"],\n    \"P\": [\"plant\", \"physcomitrella patens\", \"sorghum bicolor\", \"triticum aestivum\"],\n    \"5\": [\"barley\", \"hordeum vulgare\", \"hordeum vulgare subsp. vulgare\"],\n    \"6\": [\"oryza sativa\", \"oryza sativa japonica group\"],\n    \"%\": [\"brachypodium distachyon\"],\n    \")\": [\"tomatoes\", \"solanum lycopersicum\", \"solanum tuberosum\"],\n    \"^\": [\"glycine max\"]\n  },\n  other: {\n    \"b\": [\"bug\"],\n    \"E\": [\"pufferfish\", \"tetraodon nigroviridis\"],\n    \"f\": [\"frog\", \"xenopus (silurana) tropicalis\", \"xenopus tropicalis\"],\n    \"F\": [\"fly\", \"drosophila melanogaster\"],\n    \"k\": [\"chicken\", \"gallus gallus\"],\n    \"L\": [\"escherichia coli\"],\n    \"n\": [\"finch\", \"pyrrhula pyrrhula\"],\n    \"s\": [\"scorpion\"],\n    \"S\": [\"spider\"],\n    \"u\": [\"fungus\"],\n    \"v\": [\"virus\"],\n    \"W\": [\"caenorhabditis elegans\", \"schistosoma mansoni\"],\n    \"Y\": [\"yeast\", \"saccharomyces cerevisiae\", \"schizosaccharomyces pombe\"],\n    \"Z\": [\"zebrafish\", \"danio rerio\"],\n    \"0\": [\"amoeba\"],\n    \"1\": [\"mosquito\"],\n    \"2\": [\"diatom\"],\n    \"4\": [\"louse\"],\n    \"7\": [\"anolis carolinensis\"],\n    \"£\": [\"aspergillus fumigatus\"],\n    \"+\": [\"ray\"],\n    \"'\": [\"snail\"],\n    \"$\": [\"bee\"],\n    \"&\": [\"tick\"],\n    \"@\": [\"plasmodium\"]\n  }\n};\n\nvar lookupInGroup = function lookupInGroup(group, species) {\n  return Object.keys(mapping[group]).find(function (iconChar) {\n    return mapping[group][iconChar].includes(species.toLowerCase());\n  });\n};\n\nvar lookupIcon = function lookupIcon(species) {\n  for (var group in mapping) {\n    var iconChar = lookupInGroup(group, species);\n    if (iconChar) {\n      return [group, iconChar];\n    }\n  }\n\n  return [\"\", \"\"];\n};\n\nvar getAllSpecies = function getAllSpecies() {\n  var allSpecies = [];\n  Object.keys(mapping).forEach(function (group) {\n    Object.keys(mapping[group]).forEach(function (iconChar) {\n      mapping[group][iconChar].forEach(function (species) {\n        return allSpecies.push(species);\n      });\n    });\n  });\n\n  return allSpecies;\n};\n\nexports.default = lookupIcon;\nexports.getAllSpecies = getAllSpecies;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-ebi-species/lib/mapping.js\n// module id = 263\n// module chunks = 1 3"],"sourceRoot":""}